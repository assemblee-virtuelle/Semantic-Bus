version: '3.0'
services:
    
    proxy:
      image: traefik
      command: --api --docker
      ports:
        - "80:80"
        - "443:443"
        - "8080:8080"
      networks:
        - proxy  
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - /traefik/traefik.toml:/traefik.toml
        - /traefik/acme.json:/acme.json
      restart: unless-stopped

    timer:
      build: ./timer
      container_name: timer
      environment:
          - CONFIG_URL=https://data-players.github.io/StrongBox/public/OVH-deployement.json
          - NODE_ENV=production
      networks:
        - proxy  
        - internal 
      volumes:
        - ./main/lib:/data/app/lib
      restart: always
      labels:
        - "traefik.port=80"
        - "traefik.backend=semanticbus"
        - "traefik.frontend.rule=Host:semanticbus.timer"   
    
    semanticbus_front:
      build: ./main
      container_name: semanticbus_front
      environment:
          - ENGINE=false
          - PORT= 80
          - NODE_ENV=production
          - CONFIG_URL=https://data-players.github.io/StrongBox/public/OVH-deployement.json
      volumes:
        - ./main:/data/app/
      restart: always
      networks:
        - proxy  
        - internal  
      links:
          # - mongodb
          - rabbitmq
      depends_on:
          - rabbitmq
      command: ["/data/scripts/wait-for-it.sh", "rabbitmq:5672", "-t", "25", "--", "npm", "run", "start"]
      labels:
        - "traefik.port=80"
        - "traefik.backend=semanticbus"
        - "traefik.frontend.rule=Host:semanticbus.docker"

    semanticbus_engine_1:
      build: ./main
      container_name: semanticbus_engine_1
      environment:
          - ENGINE=true
          - PORT= 80
          - NODE_ENV=production
          - CONFIG_URL=https://data-players.github.io/StrongBox/public/OVH-deployement.json
      volumes:
        - ./main:/data/app/
      restart: always
      networks:
        - proxy  
        - internal  
      links:
          # - mongodb
          - rabbitmq
      depends_on:
          - rabbitmq
      command: ["/data/scripts/wait-for-it.sh", "rabbitmq:5672", "-t", "25", "--", "npm", "run", "start"]
      labels:
        - "traefik.port=80"
        - "traefik.backend=semanticbus"
        - "traefik.frontend.rule=Host:semanticbus.docker"
    
    semanticbus_engine_2:
      build: ./main
      container_name: semanticbus_engine_2
      environment:
          - ENGINE=true
          - PORT= 80
          - NODE_ENV=production
          - CONFIG_URL=https://data-players.github.io/StrongBox/public/OVH-deployement.json
      volumes:
        - ./main:/data/app/
      restart: always
      networks:
        - proxy  
        - internal  
      links:
          # - mongodb
          - rabbitmq
      depends_on:
          - rabbitmq
      command: ["/data/scripts/wait-for-it.sh", "rabbitmq:5672", "-t", "25", "--", "npm", "run", "start"]
      labels:
        - "traefik.port=80"
        - "traefik.backend=semanticbus"
        - "traefik.frontend.rule=Host:semanticbus.docker"

    rabbitmq:
      image: semanticbus/rabbitmq-stomp
      hostname: rabbitmq
      ports:
        - 5672:5672
        - 15674:15674
        - 15672:15672
      restart: always
      expose:
        - 5672
      labels:
        NAME: "rabbitmq"
      networks:
        - proxy  
        - internal  
      labels:
        - "traefik.frontend.rule=Host:semanticbus.rabbit"
        - "traefik.port=15672"
        - "traefik.backend=rabbitmq"
        - "traefik.frontend.entryPoints=http"

    #monitoring

    #stockage cadvisor data
    influxdb:
      image: tutum/influxdb:0.9
      restart: always
      environment:
        - PRE_CREATE_DB=cadvisor
      ports:
        - "8083:8083"
        - "8086:8086"
      expose:
        - "8090"
        - "8099"
      volumes:
        # Mount for influxdb data directory
        # - ./influxdb/data:/var/lib/influxdb
        # # Mount for influxdb configuration
        # - ./influxdb/config/:/etc/influxdb/
    
    #listen docker
    cadvisor:
      image: google/cadvisor:v0.29.0
      links:
        - influxdb:influxsrv
      command: -storage_driver=influxdb -storage_driver_db=cadvisor -storage_driver_host=influxsrv:8086
      restart: always
      ports:
        - "9000:9000"
      volumes:
        - /:/rootfs:ro
        - /var/run:/var/run:rw
        - /sys:/sys:ro
        - /var/lib/docker/:/var/lib/docker:ro
    
    #graph representation
    grafana:
      build:
        context: ./grafana
      restart: always
      links:
        - influxdb:influxsrv
      ports:
        - "3000:3000"
      environment:
        - HTTP_USER=admin
        - HTTP_PASS=admin
        - INFLUXDB_HOST=influxsrv
        - INFLUXDB_PORT=8086
        - INFLUXDB_NAME=cadvisor
        - INFLUXDB_USER=root
        - INFLUXDB_PASS=root
      labels:
        - "traefik.port=3000"
        - "traefik.backend=grafana"
        - "traefik.frontend.rule=Host:semanticbus.grafana"

networks: 
  proxy:
    external: true
  internal:
    external: false