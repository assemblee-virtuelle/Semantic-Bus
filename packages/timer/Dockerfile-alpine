FROM node:18-alpine

WORKDIR /data/timer

# confirm installation
RUN node -v
RUN npm -v

ARG CONFIG_URL
ARG PM2_PUBLIC_KEY
ARG PM2_SECRET_KEY
ARG ENV

#install pm2 to production (monitoring)
RUN npm install pm2 -g
#install nodemon to dev (support hot realoading) (need specific command in compose)
RUN npm install nodemon -g

ENV CONFIG_URL=$CONFIG_URL
ENV PM2_PUBLIC_KEY=$PM2_PUBLIC_KEY
ENV PM2_SECRET_KEY=$PM2_SECRET_KEY
ENV BROADCAST_LOGS 1
ENV FORCE_INSPECTOR 1

# install tool for npm lib compile in C
RUN apk add --update --no-cache autoconf libtool automake python3 py3-pip alpine-sdk
RUN apk update && apk add bash

# Setup workspace structure - copy root package.json with workspaces
COPY package.json /data/
RUN mkdir -p /data/packages/timer /data/packages/core

# Copy package.json files for workspace structure  
COPY packages/timer/package.json /data/packages/timer/
COPY packages/core/package.json /data/packages/core/

# Install all workspace dependencies from root
RUN cd /data/ && npm cache clean --force && npm install --loglevel verbose

# Copy source code maintaining workspace structure
COPY packages/core /data/packages/core/
COPY packages/timer /data/packages/timer/

# Keep working directory as timer for compatibility
WORKDIR /data/packages/timer

COPY ./wait-for-it.sh /data/scripts/

# Expose ports (for orchestrators and dynamic reverse proxies)
EXPOSE 8080

CMD [ "pm2-runtime", "app.js", "--name" ,"timer"]
